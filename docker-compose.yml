version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UID: 1000
        GID: 1000
    container_name: weather-monitor-app
    volumes:
      - ./:/var/www
    working_dir: /var/www
    depends_on:
      - mysql
    networks:
      - weather-monitor-network

  nginx:
    image: nginx:latest
    container_name: weather-monitor-nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - weather-monitor-network

  mysql:
    image: mysql:8
    container_name: weather-monitor-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: weather
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: weather
      MYSQL_PASSWORD: weather
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - weather-monitor-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: weather-monitor-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - weather-monitor-network

  node:
    image: node:20
    container_name: weather-monitor-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "5173:5173"
    command: tail -f /dev/null
    networks:
      - weather-monitor-network

networks:
  weather-monitor-network:

volumes:
  mysql-data:

